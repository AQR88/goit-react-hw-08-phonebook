{"version":3,"file":"static/js/907.518b5b93.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formName\":\"ContactForm_formName__9bHzl\",\"formNumber\":\"ContactForm_formNumber__UMrmC\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    if (!filter) {\n      return contacts;\n    } else {\n      return contacts.filter(contact => {\n        return contact.name.toLowerCase().includes(filter.toLowerCase());\n      });\n    }\n  }\n);\n","import React, { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport Notiflix from 'notiflix';\nimport { nanoid } from 'nanoid';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChangeName = e => {\n    const { value } = e.target;\n    setName(value);\n  };\n\n  const handleChangeNumber = e => {\n    const { value } = e.target;\n    setNumber(value);\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    const isContactExist = contacts.some(\n      contact =>\n        (contact.name &&\n          contact.name.toLowerCase().trim() === name.toLowerCase().trim()) ||\n        (contact.number && contact.number.trim() === number.trim())\n    );\n\n    if (isContactExist) {\n      Notiflix.Notify.info(`Contact \"${name}\" is already in contactsðŸ˜Ž`);\n    } else {\n      dispatch(addContact({ id: nanoid(), name, number }));\n      Notiflix.Notify.success(`${name} was added to your phonebook`);\n    }\n    reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleFormSubmit}>\n      <label className={css.formLabel}>\n        Name\n        <input\n          className={css.formName}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChangeName}\n        />\n      </label>\n      <label className={css.formLabel}>\n        Number\n        <input\n          className={css.formNumber}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number\"\n          value={number}\n          onChange={handleChangeNumber}\n        />\n      </label>\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListItemBtn\":\"ContactList_contactListItemBtn__TXYnT\",\"contactList\":\"ContactList_contactList__UFVCg\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { delContact } from '../../redux/contacts/operations';\nimport { getVisibleContacts } from '../../redux/contacts/selectors';\nimport css from './ContactList.module.css';\nimport Notiflix from 'notiflix';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const visibleContacts = useSelector(getVisibleContacts);\n\n  const handleDelete = id => {\n    dispatch(delContact(id));\n    Notiflix.Notify.failure('Contact deleted!');\n  };\n\n  return (\n    <div className={css.wraperContactList}>\n      <ul className={css.contactList}>\n        {visibleContacts.map((contact, id) => (\n          <li key={id} className={css.contactListItem}>\n            {contact.name}: {contact.number}\n            <button\n              type=\"button\"\n              className={css.contactListItemBtn}\n              onClick={() => handleDelete(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterName\":\"Filter_filterName__Y2kKA\",\"filterLabel\":\"Filter_filterLabel__+pnW-\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/selectors';\nimport { setFilter } from '../../redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <div>\n      <label className={css.filterLabel}> Find contacts by name </label>\n      <input\n        className={css.filterName}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { getIsLoading } from '../redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n        <ContactForm />\n        <div>{isLoading && 'Request in progress...'}</div>\n        <Filter />\n        <ContactList />\n      </HelmetProvider>\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","getVisibleContacts","createSelector","contact","name","toLowerCase","includes","ContactForm","setName","useState","number","setNumber","dispatch","useDispatch","useSelector","_jsxs","className","css","onSubmit","e","preventDefault","some","trim","Notiflix","concat","addContact","id","nanoid","children","_jsx","type","placeholder","value","onChange","target","ContactList","visibleContacts","map","onClick","delContact","handleDelete","Filter","event","setFilter","Contacts","useEffect","fetchContacts","_Fragment","HelmetProvider","Helmet"],"sourceRoot":""}