{"version":3,"file":"static/js/907.9da031f9.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formName\":\"ContactForm_formName__9bHzl\",\"formNumber\":\"ContactForm_formNumber__UMrmC\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.filter;\n","import React, { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport Notiflix from 'notiflix';\nimport { nanoid } from 'nanoid';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChangeName = e => {\n    const { value } = e.target;\n    setName(value);\n  };\n\n  const handleChangeNumber = e => {\n    const { value } = e.target;\n    setNumber(value);\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    const isContactExist = contacts.some(\n      contact =>\n        (contact.name &&\n          contact.name.toLowerCase().trim() === name.toLowerCase().trim()) ||\n        (contact.number && contact.number.trim() === number.trim())\n    );\n\n    if (isContactExist) {\n      Notiflix.Notify.info(`Contact \"${name}\" is already in contactsðŸ˜Ž`);\n    } else {\n      dispatch(addContact({ id: nanoid(), name, number }));\n      Notiflix.Notify.success(`${name} was added to your phonebook`);\n    }\n    reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleFormSubmit}>\n      <label className={css.formLabel}>\n        Name\n        <input\n          className={css.formName}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChangeName}\n        />\n      </label>\n      <label className={css.formLabel}>\n        Number\n        <input\n          className={css.formNumber}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number\"\n          value={number}\n          onChange={handleChangeNumber}\n        />\n      </label>\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListItemBtn\":\"ContactList_contactListItemBtn__TXYnT\",\"contactList\":\"ContactList_contactList__UFVCg\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { delContact } from '../../redux/contacts/operations';\nimport { getContacts, getFilter } from '../../redux/contacts/selectors';\nimport css from './ContactList.module.css';\nimport Notiflix from 'notiflix';\nimport { createSelector } from '@reduxjs/toolkit';\n\nconst getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    if (!filter) {\n      return contacts;\n    } else {\n      return contacts.filter(contact => {\n        return contact.name.toLowerCase().includes(filter.toLowerCase());\n      });\n    }\n  }\n);\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  // const contacts = useSelector(getContacts);\n  // const filter = useSelector(getFilter);\n  const visibleContacts = useSelector(getVisibleContacts);\n\n  const handleDelete = id => {\n    dispatch(delContact(id));\n    Notiflix.Notify.failure('Contact deleted!');\n  };\n\n  return (\n    <div className={css.wraperContactList}>\n      <ul className={css.contactList}>\n        {visibleContacts.map((contact, id) => (\n          <li key={id} className={css.contactListItem}>\n            {contact.name}: {contact.number}\n            <button\n              type=\"button\"\n              className={css.contactListItemBtn}\n              onClick={() => handleDelete(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterName\":\"Filter_filterName__Y2kKA\",\"filterLabel\":\"Filter_filterLabel__+pnW-\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/selectors';\nimport { setFilter } from '../../redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <div>\n      <label className={css.filterLabel}> Find contacts by name </label>\n      <input\n        className={css.filterName}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { getIsLoading } from '../redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n        <ContactForm />\n        <div>{isLoading && 'Request in progress...'}</div>\n        <Filter />\n        <ContactList />\n      </HelmetProvider>\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","ContactForm","name","setName","useState","number","setNumber","dispatch","useDispatch","useSelector","_jsxs","className","css","onSubmit","e","preventDefault","some","contact","toLowerCase","trim","Notiflix","concat","addContact","id","nanoid","children","_jsx","type","placeholder","value","onChange","target","getVisibleContacts","createSelector","includes","ContactList","visibleContacts","map","onClick","delContact","handleDelete","Filter","event","setFilter","Contacts","useEffect","fetchContacts","_Fragment","HelmetProvider","Helmet"],"sourceRoot":""}